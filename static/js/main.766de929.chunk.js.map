{"version":3,"sources":["components/TodoFilter/TodoFilter.jsx","constants/FilterTypes.js","components/TodoSort/TodoSort.jsx","constants/SortTypes.js","components/TodoItem/TodoItem.jsx","components/TodoDialog/TodoDialog.jsx","components/TodoList/TodoList.jsx","components/TodoAdd/TodoAdd.jsx","components/App/App.js","actions/index.js","constants/ActionTypes.js","components/Header/Header.jsx","components/Footer/Footer.jsx","reducers/initialState.js","reducers/visibility.js","reducers/index.js","reducers/todos.js","serviceWorker.js","index.js"],"names":["TodoFilter","props","FormControl","Select","id","value","visibility","filter","onChange","event","setVisibilityFilter","target","MenuItem","TodoSort","className","setSortOrder","sortOrder","Button","onClick","TodoItem","Card","variant","CardContent","Typography","component","todo","title","description","CardActions","style","justifyContent","completed","toString","handleClickDone","size","handleClickEdit","handleClickDelete","TodoDialog","Dialog","open","onClose","handleClickCancel","aria-labelledby","DialogTitle","DialogContent","TextField","defaultValue","autoFocus","margin","label","e","handleUpdateTitle","fullWidth","multiline","rows","handleUpdateDescription","DialogActions","color","handleClickSave","TodoList","console","log","setState","state","undefined","status","editTodo","deleteTodo","completeTodo","this","todos","map","key","React","Component","TodoAdd","handleClickAdd","addTodo","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","mapDispatchToProps","type","connect","sort","a","b","toLowerCase","Error","getSortedTodos","t","getVisibleTodos","classes","Grid","container","justify","item","xs","Paper","Header","href","Footer","currentYear","Date","getUTCFullYear","todoList","visibilitySettings","sortBy","action","rootReducer","combineReducers","reduce","maxId","Math","max","Boolean","window","location","hostname","match","persistedState","localStorage","getItem","JSON","parse","store","createStore","reducers","subscribe","getState","setItem","stringify","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.766de929.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n} from '@material-ui/core'\r\nimport {\r\n  SHOW_ALL,\r\n  SHOW_ACTIVE,\r\n  SHOW_COMPLETED,\r\n} from '../../constants/FilterTypes'\r\n\r\n\r\nconst TodoFilter = (props) => {\r\n  // let filter =\r\n\r\n  const handleChange = (event) => {\r\n    // filter =\r\n    props.setVisibilityFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        id=\"filter-todo-list\"\r\n        value={props.visibility.filter}\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value={SHOW_ALL}>Show All</MenuItem>\r\n        <MenuItem value={SHOW_ACTIVE}>Show Active</MenuItem>\r\n        <MenuItem value={SHOW_COMPLETED}>Show Completed</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nTodoFilter.propTypes = {\r\n  setVisibilityFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoFilter","export const SHOW_ALL = 'SHOW_ALL'\r\nexport const SHOW_ACTIVE = 'SHOW_ACTIVE'\r\nexport const SHOW_COMPLETED = 'SHOW_COMPLETED'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SortIcon from '@material-ui/icons/Sort'\r\nimport {Button} from '@material-ui/core'\r\nimport {\r\n  SORT_DESC,\r\n  SORT_ASC,\r\n} from '../../constants/SortTypes'\r\nimport './todoSort.css'\r\n\r\nconst TodoSort = ({visibility, setSortOrder}) => {\r\n  let className\r\n  if (visibility.sortOrder === SORT_ASC) {\r\n    className = 'todo-sort-button-asc'\r\n  }\r\n  if (visibility.sortOrder === SORT_DESC) {\r\n    className = 'todo-sort-button-desc'\r\n  }\r\n  const handleClick = () => {\r\n    setSortOrder(visibility.sortOrder === SORT_ASC ? SORT_DESC: SORT_ASC)\r\n  }\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={handleClick}\r\n        className={className}>\r\n        <SortIcon/>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nTodoSort.propTypes = {\r\n  visibility: PropTypes.object.isRequired,\r\n  setSortOrder: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoSort","export const SORT_BY_TITLE = 'SORT_BY_TITLE'\r\nexport const SORT_BY_STATUS = 'SORT_BY_STATUS'\r\nexport const SORT_ASC = 'SORT_ASC'\r\nexport const SORT_DESC = 'SORT_DESC'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './todoItem.css'\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst TodoItem = (props) => (\r\n  <Card variant=\"outlined\">\r\n    <CardContent>\r\n      <Typography variant=\"h6\" component=\"h2\">\r\n        {props.todo.title}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {props.todo.description}\r\n      </Typography>\r\n    </CardContent>\r\n    <CardActions style={{justifyContent: 'center'}}>\r\n      <Typography variant=\"body2\" component=\"p\">Completed: {props.todo.completed.toString()}</Typography>\r\n      <Button onClick={() => props.handleClickDone(props.todo.id)} size=\"small\"><DoneIcon/></Button>\r\n      <Button onClick={() => props.handleClickEdit(props.todo)} size=\"small\"><EditIcon/></Button>\r\n      <Button onClick={() => props.handleClickDelete(props.todo.id)} size=\"small\"><DeleteIcon/></Button>\r\n    </CardActions>\r\n  </Card>\r\n)\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  handleClickDone: PropTypes.func.isRequired,\r\n  handleClickEdit: PropTypes.func.isRequired,\r\n  handleClickDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@material-ui/core'\r\n\r\n\r\nconst TodoDialog = (props) => {\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleClickCancel} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Edit Todo</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          defaultValue={props.todo.title}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          onChange={e => props.handleUpdateTitle(e.target.value)}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          defaultValue={props.todo.description}\r\n          margin=\"dense\"\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          multiline\r\n          rows={4}\r\n          onChange={e => props.handleUpdateDescription(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClickCancel} color=\"primary\">Cancel</Button>\r\n        <Button onClick={props.handleClickSave} color=\"primary\">Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nTodoDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  handleUpdateTitle: PropTypes.func.isRequired,\r\n  handleUpdateDescription: PropTypes.func.isRequired,\r\n  handleClickSave: PropTypes.func.isRequired,\r\n  handleClickCancel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoDialog\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from '../TodoItem/TodoItem'\r\nimport TodoDialog from '../TodoDialog/TodoDialog'\r\nimport './todoList.css'\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      todo: {\r\n        title: undefined,\r\n        description: undefined,\r\n        status: undefined,\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClickEdit = (todo) => {\r\n    console.log(todo)\r\n    this.setState({\r\n      open: true,\r\n      todo: {...todo}\r\n    })\r\n  }\r\n\r\n  handleUpdateTitle = title => {\r\n    this.setState({\r\n      todo: {\r\n        ...this.state.todo,\r\n        title: title,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleUpdateDescription = description => {\r\n    this.setState({\r\n      todo: {\r\n        ...this.state.todo,\r\n        description: description,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClickCancel = () => {\r\n    this.setState({\r\n      open: false,\r\n      todo: {\r\n        title: undefined,\r\n        description: undefined,\r\n        status: undefined,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClickSave = () => {\r\n    this.props.editTodo(this.state.todo)\r\n    this.setState({\r\n      open: false,\r\n      todo: {\r\n        title: undefined,\r\n        description: undefined,\r\n        status: undefined,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClickDelete = (id) => {\r\n    this.props.deleteTodo(id)\r\n  }\r\n\r\n  handleClickDone = (id) => {\r\n    this.props.completeTodo(id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.props.todos.map(todo => (\r\n              <TodoItem\r\n                todo={todo}\r\n                key={`todo-${todo.id}`}\r\n                handleClickDone={this.handleClickDone}\r\n                handleClickEdit={this.handleClickEdit}\r\n                handleClickDelete={this.handleClickDelete}\r\n              />\r\n            )\r\n          )\r\n        }\r\n        <TodoDialog\r\n          open={this.state.open}\r\n          todo={this.state.todo}\r\n          handleClickSave={this.handleClickSave}\r\n          handleClickCancel={this.handleClickCancel}\r\n          handleUpdateTitle={this.handleUpdateTitle}\r\n          handleUpdateDescription={this.handleUpdateDescription}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(Object).isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoDialog from '../TodoDialog/TodoDialog'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport {\r\n  Button\r\n} from '@material-ui/core'\r\nimport './todoAdd.css'\r\n\r\nclass TodoAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo: {\r\n        title: undefined,\r\n        description: undefined,\r\n      },\r\n      open: false\r\n    }\r\n  }\r\n\r\n  handleClickAdd = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClickCancel = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleUpdateTitle = title => {\r\n    this.setState({\r\n      todo: {\r\n        ...this.state.todo,\r\n        title: title\r\n      }\r\n    })\r\n  }\r\n\r\n  handleUpdateDescription = (description) => {\r\n    this.setState({\r\n      todo: {\r\n        ...this.state.todo,\r\n        description: description\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClickSave = () => {\r\n    this.props.addTodo(this.state.todo)\r\n    this.setState({\r\n      todo: {\r\n        title: undefined,\r\n        description: undefined,\r\n      },\r\n      open: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClickAdd}>\r\n          <AddCircleOutlineIcon/>\r\n        </Button>\r\n        <TodoDialog\r\n          open={this.state.open}\r\n          todo={this.state.todo}\r\n          handleClickSave={this.handleClickSave}\r\n          handleClickCancel={this.handleClickCancel}\r\n          handleUpdateTitle={this.handleUpdateTitle}\r\n          handleUpdateDescription={this.handleUpdateDescription}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTodoAdd.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoAdd","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TodoFilter from '../TodoFilter/TodoFilter'\r\nimport TodoSort from '../TodoSort/TodoSort'\r\nimport TodoList from '../TodoList/TodoList'\r\nimport TodoAdd from '../TodoAdd/TodoAdd'\r\nimport {\r\n  SHOW_ALL,\r\n  SHOW_ACTIVE,\r\n  SHOW_COMPLETED,\r\n} from '../../constants/FilterTypes'\r\nimport {\r\n  SORT_ASC,\r\n  SORT_DESC,\r\n} from '../../constants/SortTypes'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n  addTodo,\r\n  editTodo,\r\n  deleteTodo,\r\n  completeTodo,\r\n  setSortOrder,\r\n  setVisibilityFilter,\r\n} from '../../actions'\r\nimport './app.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction App(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            <main className=\"main-container\">\r\n              <div className=\"todo-options-container\">\r\n                <TodoSort visibility={props.visibility} setSortOrder={props.setSortOrder}/>\r\n                <TodoFilter visibility={props.visibility} setVisibilityFilter={props.setVisibilityFilter}/>\r\n                <TodoAdd addTodo={props.addTodo}/>\r\n              </div>\r\n              <div className=\"todo-items-container\">\r\n                <TodoList\r\n                  todos={props.todos}\r\n                  editTodo={props.editTodo}\r\n                  deleteTodo={props.deleteTodo}\r\n                  completeTodo={props.completeTodo}\r\n                />\r\n              </div>\r\n            </main>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  todos: PropTypes.arrayOf(Object).isRequired,\r\n  visibility: PropTypes.object.isRequired,\r\n  addTodo: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n  setSortOrder: PropTypes.func.isRequired,\r\n  setVisibilityFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case SHOW_ALL:\r\n      return todos\r\n    case SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst getSortedTodos = (todos, sortOrder) => {\r\n  switch (sortOrder) {\r\n    case SORT_ASC:\r\n      return todos.sort((a, b) => (a.title.toLowerCase() > b.title.toLowerCase()) ? 1 : -1)\r\n    case SORT_DESC:\r\n      return todos.sort((a, b) => (a.title.toLowerCase() < b.title.toLowerCase()) ? 1 : -1)\r\n    default:\r\n      throw new Error('Unknown sort order: ' + sortOrder)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let {todos, visibility} = state\r\n  const {filter, sortOrder} = visibility\r\n  todos = getVisibleTodos(todos, filter)\r\n  todos = getSortedTodos(todos, sortOrder)\r\n  return {todos, visibility}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo,\r\n  editTodo,\r\n  deleteTodo,\r\n  completeTodo,\r\n  setSortOrder,\r\n  setVisibilityFilter\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import * as actionTypes from '../constants/ActionTypes'\r\n\r\n\r\nexport const addTodo = ({title, description}) => ({type: actionTypes.ADD_TODO, title, description})\r\nexport const editTodo = ({id, title, description}) => ({type: actionTypes.EDIT_TODO, id, title, description})\r\nexport const deleteTodo = (id) => ({type: actionTypes.DELETE_TODO, id})\r\nexport const completeTodo = (id) => ({type: actionTypes.COMPLETE_TODO, id})\r\nexport const setVisibilityFilter = (filter) => ({type: actionTypes.SET_VISIBILITY_FILTER, filter})\r\nexport const setSortOrder = (sortOrder) => ({type: actionTypes.SET_SORT_ORDER, sortOrder: sortOrder})\r\n","export const ADD_TODO = 'ADD_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\nexport const DELETE_ALL_TODOS = 'DELETE_ALL_TODOS'\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\nexport const SET_SORT_BY_FIELD = 'SET_SORT_BY_FIELD'\r\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header'>\r\n            <nav>\r\n                <ol>\r\n                    <li><a className=\"link\" href=\"#Home\">Home</a></li>\r\n                    <li><a className=\"link\" href=\"#About\">About</a></li>\r\n                    <li><a className=\"link\" href=\"#Contact\">Contact</a></li>\r\n                </ol>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n    const currentDate = new Date()\r\n    const currentYear = currentDate.getUTCFullYear()\r\n    return (\r\n        <footer className='footer'>\r\n            <p>John Wiley & Sons, Inc. {currentYear}</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import * as sortTypes from '../constants/SortTypes'\r\nimport * as filterTypes from '../constants/FilterTypes'\r\n\r\nexport const todoList = [\r\n    {\r\n        id: 0,\r\n        title: '#1 task',\r\n        description: 'Add a task with title',\r\n        completed: true\r\n    },\r\n    {\r\n        id: 1,\r\n        title: '#2 task',\r\n        description: 'Task list is sorted in reverse order by the task title',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 2,\r\n        title: '#3 task',\r\n        description: 'Edit a task',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        title: '#4 task',\r\n        description: 'Mark as done',\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        title: '#5 task',\r\n        description: 'Should be able to delete',\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport const visibilitySettings = {\r\n    sortBy: sortTypes.SORT_BY_TITLE,\r\n    sortOrder: sortTypes.SORT_DESC,\r\n    filter: filterTypes.SHOW_ALL\r\n}\r\n","import {\r\n  SET_VISIBILITY_FILTER,\r\n  SET_SORT_BY_FIELD,\r\n  SET_SORT_ORDER,\r\n} from '../constants/ActionTypes'\r\nimport {visibilitySettings} from './initialState';\r\n\r\nconst visibility = (state = visibilitySettings, action) => {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter\r\n      }\r\n\r\n    case SET_SORT_BY_FIELD:\r\n      return {\r\n        ...state,\r\n        sortBy: action.sortBy\r\n      }\r\n\r\n    case SET_SORT_ORDER:\r\n      return {\r\n        ...state,\r\n        sortOrder: action.sortOrder\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibility","import {combineReducers} from 'redux'\r\nimport todos from './todos'\r\nimport visibility from './visibility'\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todos,\r\n  visibility: visibility\r\n})\r\n\r\nexport default rootReducer","import {\r\n  ADD_TODO,\r\n  EDIT_TODO,\r\n  DELETE_TODO,\r\n  DELETE_ALL_TODOS,\r\n  COMPLETE_TODO,\r\n} from '../constants/ActionTypes';\r\nimport {todoList} from './initialState'\r\n\r\nexport default function todos(state = todoList, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\r\n          title: action.title,\r\n          description: action.description,\r\n          completed: false,\r\n        }\r\n      ]\r\n\r\n    case EDIT_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ?\r\n          { ...todo, title: action.title, description: action.description } :\r\n          todo\r\n      )\r\n\r\n    case DELETE_TODO:\r\n      return state.filter(todo =>\r\n        todo.id !== action.id\r\n      )\r\n\r\n    case DELETE_ALL_TODOS:\r\n      return []\r\n\r\n    case COMPLETE_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ?\r\n          { ...todo, completed: !todo.completed } :\r\n          todo\r\n      )\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport App from './components/App/App'\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport reducers from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\nconst store = createStore(reducers, persistedState,)\nconst unsubscribe = store.subscribe(() => {\n  console.log(store.getState())\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n// unsubscribe()\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <Header/>\n    <App />\n    <Footer/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}